import { BigInt } from "@graphprotocol/graph-ts/index";
import { BadgeMetric } from "../../generated/schema";
import { createOrLoadEmblemEntityStats } from "./emblemModels";

export const BADGE_AWARD_METADATA_NAME_INDEXER = "INDEXER";
export const BADGE_AWARD_METADATA_NAME_DELEGATOR = "DELEGATOR";
export const BADGE_AWARD_METADATA_NAME_CURATOR = "CURATOR";
export const BADGE_AWARD_METADATA_NAME_SUBGRAPH_DEVELOPER =
  "SUBGRAPH_DEVELOPER";
export const BADGE_AWARD_METADATA_NAME_SUBGRAPH = "SUBGRAPH";
export const BADGE_AWARD_METADATA_NAME_SUBGRAPH_DEPLOYMENT =
  "SUBGRAPH_DEPLOYMENT";
export const BADGE_AWARD_METADATA_NAME_TOKENS = "TOKENS";

export const BADGE_METRIC_INDEXER_SUBGRAPHS_INDEXED_ID = 0;
export const BADGE_METRIC_INDEXER_SUBGRAPHS_INDEXED =
  "INDEXER_SUBGRAPHS_INDEXED";
export const BADGE_METRIC_INDEXER_QUERY_FEES_COLLECTED_ID = 1;
export const BADGE_METRIC_INDEXER_QUERY_FEES_COLLECTED =
  "INDEXER_QUERY_FEES_COLLECTED";
export const BADGE_METRIC_INDEXER_ALLOCATIONS_OPENED_ID = 2;
export const BADGE_METRIC_INDEXER_ALLOCATIONS_OPENED =
  "INDEXER_ALLOCATIONS_OPENED";
export const BADGE_METRIC_INDEXER_DELEGATOR_COUNT_ID = 3;
export const BADGE_METRIC_INDEXER_DELEGATOR_COUNT = "INDEXER_DELEGATOR_COUNT";
export const BADGE_METRIC_DELEGATOR_INDEXERS_ID = 4;
export const BADGE_METRIC_DELEGATOR_INDEXERS = "DELEGATOR_INDEXERS";
export const BADGE_METRIC_CURATOR_SUBGRAPHS_SIGNALLED_ID = 5;
export const BADGE_METRIC_CURATOR_SUBGRAPHS_SIGNALLED =
  "CURATOR_SUBGRAPHS_SIGNALLED";
export const BADGE_METRIC_CURATOR_HOUSE_ODDS_ID = 6;
export const BADGE_METRIC_CURATOR_HOUSE_ODDS = "CURATOR_HOUSE_ODDS";
export const BADGE_METRIC_CURATOR_APE_ID = 7;
export const BADGE_METRIC_CURATOR_APE = "CURATOR_APE";
export const BADGE_METRIC_PUBLISHER_SIGNAL_ATTRACTED_ID = 8;
export const BADGE_METRIC_PUBLISHER_SIGNAL_ATTRACTED =
  "PUBLISHER_SIGNAL_ATTRACTED";
export const BADGE_METRIC_PUBLISHER_SUBGRAPHS_DEPLOYED_ID = 9;
export const BADGE_METRIC_PUBLISHER_SUBGRAPHS_DEPLOYED =
  "PUBLISHER_SUBGRAPHS_DEPLOYED";
export const BADGE_METRIC_USER_BADGES_WON_ID = 10;
export const BADGE_METRIC_USER_BADGES_WON = "BADGE_METRIC_USER_BADGES_WON";

export const PROTOCOL_NAME_THE_GRAPH = "The Graph";
export const PROTOCOL_ROLE_INDEXER = "INDEXER";
export const PROTOCOL_ROLE_DELEGATOR = "DELEGATOR";
export const PROTOCOL_ROLE_CURATOR = "CURATOR";
export const PROTOCOL_ROLE_SUBGRAPH_DEVELOPER = "SUBGRAPH_DEVELOPER";
export const PROTOCOL_ROLE_CONSUMER = "CONSUMER";

export const PROTOCOL_ROLE_EMBLEM_USER = "EMBLEM_USER";

export function generateBadgeMetrics(): void {
  createBadgeMetric(
    BADGE_METRIC_INDEXER_SUBGRAPHS_INDEXED_ID,
    BADGE_METRIC_INDEXER_SUBGRAPHS_INDEXED,
    PROTOCOL_ROLE_INDEXER
  );
  createBadgeMetric(
    BADGE_METRIC_INDEXER_QUERY_FEES_COLLECTED_ID,
    BADGE_METRIC_INDEXER_QUERY_FEES_COLLECTED,
    PROTOCOL_ROLE_INDEXER
  );
  createBadgeMetric(
    BADGE_METRIC_INDEXER_ALLOCATIONS_OPENED_ID,
    BADGE_METRIC_INDEXER_ALLOCATIONS_OPENED,
    PROTOCOL_ROLE_INDEXER
  );
  createBadgeMetric(
    BADGE_METRIC_INDEXER_DELEGATOR_COUNT_ID,
    BADGE_METRIC_INDEXER_DELEGATOR_COUNT,
    PROTOCOL_ROLE_INDEXER
  );
  createBadgeMetric(
    BADGE_METRIC_DELEGATOR_INDEXERS_ID,
    BADGE_METRIC_DELEGATOR_INDEXERS,
    PROTOCOL_ROLE_DELEGATOR
  );
  createBadgeMetric(
    BADGE_METRIC_CURATOR_SUBGRAPHS_SIGNALLED_ID,
    BADGE_METRIC_CURATOR_SUBGRAPHS_SIGNALLED,
    PROTOCOL_ROLE_CURATOR
  );
  createBadgeMetric(
    BADGE_METRIC_CURATOR_HOUSE_ODDS_ID,
    BADGE_METRIC_CURATOR_HOUSE_ODDS,
    PROTOCOL_ROLE_CURATOR
  );
  createBadgeMetric(
    BADGE_METRIC_CURATOR_APE_ID,
    BADGE_METRIC_CURATOR_APE,
    PROTOCOL_ROLE_CURATOR
  );
  createBadgeMetric(
    BADGE_METRIC_PUBLISHER_SIGNAL_ATTRACTED_ID,
    BADGE_METRIC_PUBLISHER_SIGNAL_ATTRACTED,
    PROTOCOL_ROLE_SUBGRAPH_DEVELOPER
  );
  createBadgeMetric(
    BADGE_METRIC_PUBLISHER_SUBGRAPHS_DEPLOYED_ID,
    BADGE_METRIC_PUBLISHER_SUBGRAPHS_DEPLOYED,
    PROTOCOL_ROLE_SUBGRAPH_DEVELOPER
  );
  createBadgeMetric(
    BADGE_METRIC_USER_BADGES_WON_ID,
    BADGE_METRIC_USER_BADGES_WON,
    PROTOCOL_ROLE_EMBLEM_USER
  );
}

function createBadgeMetric(
  metricNumber: i32,
  metricName: string,
  protocolRole: string
): void {
  const badgeMetricId = BigInt.fromI32(metricNumber).toString();
  let badgeMetric = BadgeMetric.load(badgeMetricId);
  if (badgeMetric == null) {
    badgeMetric = new BadgeMetric(badgeMetricId);
    badgeMetric.metricNumber = metricNumber;
    badgeMetric.metricName = metricName;
    badgeMetric.protocolRole = protocolRole;
    badgeMetric.save();

    let entityStats = createOrLoadEmblemEntityStats();
    entityStats.badgeMetricCount = entityStats.badgeMetricCount + 1;
    entityStats.save();
  }
}
